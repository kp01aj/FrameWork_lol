#!/bin/bash
#
# L       OOO   L     !
# L      O   O  L     !
# L      O   O  L     !
# L      O   O  L      
# LLLLL   OOO   LLLLL !

# Creado por KernelPanicRD01
# kp01aj@gmail.com
#https://discord.gg/VZ7PFx7C

#Descripci칩n:
# Vamos a crear una versi칩n del script anterior que utiliza Wireshark en lugar de Nmap, con opciones que sean m치s 
# relevantes para las capacidades de an치lisis de paquetes de Wireshark. Ten en cuenta que Wireshark no es una herramienta 
# de l칤nea de comandos como Nmap, pero podemos utilizar tshark, que es la versi칩n de consola de Wireshark, para automatizar 
# capturas y an치lisis de paquetes desde un script de Bash.

# Opciones del script:
##Captura desde interfaz: Captura tr치fico directamente de una interfaz de red espec칤fica.
##Filtrar por protocolo: Filtra y muestra tr치fico basado en un protocolo espec칤fico.
##Captura por tiempo: Limita la captura de tr치fico a un tiempo espec칤fico.
##Filtrar por direcci칩n IP: Filtra tr치fico asociado con una direcci칩n IP espec칤fica.
##Extraer informaci칩n HTTP: Extrae y muestra detalles de las solicitudes HTTP.
##Guardar tr치fico: Guarda el tr치fico capturado en un archivo para an치lisis posterior.
##Analizar archivo de captura: Permite analizar un archivo de captura existente.
##Filtrar por puerto: Filtra tr치fico de un puerto espec칤fico.

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci칩n para mostrar el men칰 principal
show_menu() {
    echo -e "${GREEN}Men칰 Principal de Tshark para An치lisis de Tr치fico de Redes 游깷${NC}"
    echo -e "${YELLOW}1.${NC} Capturar tr치fico de una interfaz espec칤fica"
    echo -e "${YELLOW}2.${NC} Filtrar tr치fico por protocolo"
    echo -e "${YELLOW}3.${NC} Capturar tr치fico por un per칤odo espec칤fico"
    echo -e "${YELLOW}4.${NC} Filtrar tr치fico por direcci칩n IP"
    echo -e "${YELLOW}5.${NC} Extraer informaci칩n de sesiones HTTP"
    echo -e "${YELLOW}6.${NC} Guardar tr치fico capturado a un archivo"
    echo -e "${YELLOW}7.${NC} Analizar contenido de un archivo de captura"
    echo -e "${YELLOW}8.${NC} Filtrar tr치fico por puerto"
    echo -e "${YELLOW}9.${NC} Salir"
}

# Funci칩n para leer la opci칩n del usuario
read_option() {
    local choice
    read -p "Ingrese la opci칩n deseada [1 - 9]: " choice
    echo $choice
}

# Funciones para cada opci칩n del men칰

# Captura desde interfaz espec칤fica
capture_from_interface() {
    echo -e "${RED}Ingrese la interfaz de red (ej. eth0):${NC}"
    read interface
    echo -e "${GREEN}Capturando tr치fico... Presione Ctrl+C para detener.${NC}"
    tshark -i $interface
}

# Filtrar tr치fico por protocolo
filter_by_protocol() {
    echo -e "${RED}Ingrese el protocolo (ej. tcp, udp, icmp):${NC}"
    read protocol
    echo -e "${GREEN}Capturando tr치fico... Presione Ctrl+C para detener.${NC}"
    tshark -Y $protocol
}

# Captura por tiempo limitado
capture_for_time() {
    echo -e "${RED}Ingrese el tiempo de captura en segundos:${NC}"
    read time
    echo -e "${GREEN}Capturando tr치fico durante $time segundos...${NC}"
    tshark -a duration:$time
}

# Filtrar por direcci칩n IP
filter_by_ip() {
    echo -e "${RED}Ingrese la direcci칩n IP (ej. 192.168.1.1):${NC}"
    read ip
    echo -e "${GREEN}Capturando tr치fico relacionado con $ip... Presione Ctrl+C para detener.${NC}"
    tshark -Y "ip.addr == $ip"
}

# Extraer informaci칩n HTTP
extract_http_info() {
    echo -e "${GREEN}Capturando sesiones HTTP... Presione Ctrl+C para detener.${NC}"
    tshark -Y "http" -T fields -e http.request.method -e http.request.uri -e http.host
}

# Guardar tr치fico a archivo
save_traffic_to_file() {
    echo -e "${RED}Ingrese el nombre del archivo (ej. captura.pcap):${NC}"
    read filename
    echo -e "${GREEN}Guardando tr치fico a $filename... Presione Ctrl+C para detener.${NC}"
    tshark -w $filename
}

# Analizar archivo de captura
analyze_capture_file() {
    echo -e "${RED}Ingrese el nombre del archivo de captura (ej. captura.pcap):${NC}"
    read filename
    echo -e "${GREEN}Analizando $filename...${NC}"
    tshark -r $filename
}

# Filtrar tr치fico por puerto
filter_by_port() {
    echo -e "${RED}Ingrese el n칰mero de puerto (ej. 80, 443):${NC}"
    read port
    echo -e "${GREEN}Capturando tr치fico del puerto $port... Presione Ctrl+C para detener.${NC}"
    tshark -Y "tcp.port == $port"
}

# Ejecuci칩n del men칰
while true
do
    show_menu
    option=$(read_option)
    case $option in
        1) capture_from_interface ;;
        2) filter_by_protocol ;;
        3) capture_for_time ;;
        4) filter_by_ip ;;
        5) extract_http_info ;;
        6) save_traffic_to_file ;;
        7) analyze_capture_file ;;
        8) filter_by_port ;;
        9) echo -e "${GREEN}Saliendo...${NC}"; break ;;
        *) echo -e "${RED}Opci칩n incorrecta. Intente de nuevo.${NC}" ;;
    esac
done
